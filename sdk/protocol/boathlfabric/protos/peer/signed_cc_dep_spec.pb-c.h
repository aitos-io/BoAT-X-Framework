/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: peer/signed_cc_dep_spec.proto */

#ifndef PROTOBUF_C_peer_2fsigned_5fcc_5fdep_5fspec_2eproto__INCLUDED
#define PROTOBUF_C_peer_2fsigned_5fcc_5fdep_5fspec_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "peer/proposal_response.pb-c.h"

typedef struct _Protos__SignedChaincodeDeploymentSpec Protos__SignedChaincodeDeploymentSpec;


/* --- enums --- */


/* --- messages --- */

/*
 * SignedChaincodeDeploymentSpec carries the CDS along with endorsements
 */
struct  _Protos__SignedChaincodeDeploymentSpec
{
  ProtobufCMessage base;
  /*
   * This is the bytes of the ChaincodeDeploymentSpec
   */
  protobuf_c_boolean has_chaincode_deployment_spec;
  ProtobufCBinaryData chaincode_deployment_spec;
  /*
   * This is the instantiation policy which is identical in structure
   * to endorsement policy.  This policy is checked by the VSCC at commit
   * time on the instantiation (all peers will get the same policy as it
   * will be part of the LSCC instantation record and will be part of the
   * hash as well)
   */
  protobuf_c_boolean has_instantiation_policy;
  ProtobufCBinaryData instantiation_policy;
  /*
   * The endorsements of the above deployment spec, the owner's signature over
   * chaincode_deployment_spec and Endorsement.endorser.
   */
  size_t n_owner_endorsements;
  Protos__Endorsement **owner_endorsements;
};
#define PROTOS__SIGNED_CHAINCODE_DEPLOYMENT_SPEC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protos__signed_chaincode_deployment_spec__descriptor) \
    , 0,{0,NULL}, 0,{0,NULL}, 0,NULL }


/* Protos__SignedChaincodeDeploymentSpec methods */
void   protos__signed_chaincode_deployment_spec__init
                     (Protos__SignedChaincodeDeploymentSpec         *message);
size_t protos__signed_chaincode_deployment_spec__get_packed_size
                     (const Protos__SignedChaincodeDeploymentSpec   *message);
size_t protos__signed_chaincode_deployment_spec__pack
                     (const Protos__SignedChaincodeDeploymentSpec   *message,
                      uint8_t             *out);
size_t protos__signed_chaincode_deployment_spec__pack_to_buffer
                     (const Protos__SignedChaincodeDeploymentSpec   *message,
                      ProtobufCBuffer     *buffer);
Protos__SignedChaincodeDeploymentSpec *
       protos__signed_chaincode_deployment_spec__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protos__signed_chaincode_deployment_spec__free_unpacked
                     (Protos__SignedChaincodeDeploymentSpec *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protos__SignedChaincodeDeploymentSpec_Closure)
                 (const Protos__SignedChaincodeDeploymentSpec *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protos__signed_chaincode_deployment_spec__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_peer_2fsigned_5fcc_5fdep_5fspec_2eproto__INCLUDED */
