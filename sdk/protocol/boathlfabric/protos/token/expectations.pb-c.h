/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: token/expectations.proto */

#ifndef PROTOBUF_C_token_2fexpectations_2eproto__INCLUDED
#define PROTOBUF_C_token_2fexpectations_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/timestamp.pb-c.h"
#include "token/transaction.pb-c.h"

typedef struct _Protos__TokenExpectation Protos__TokenExpectation;
typedef struct _Protos__PlainExpectation Protos__PlainExpectation;
typedef struct _Protos__PlainTokenExpectation Protos__PlainTokenExpectation;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  PROTOS__TOKEN_EXPECTATION__EXPECTATION__NOT_SET = 0,
  PROTOS__TOKEN_EXPECTATION__EXPECTATION_PLAIN_EXPECTATION = 1,
} Protos__TokenExpectation__ExpectationCase;

/*
 * TokenExpectation represent the belief that someone should achieve in terms of a token action
 */
struct  _Protos__TokenExpectation
{
  ProtobufCMessage base;
  Protos__TokenExpectation__ExpectationCase expectation_case;
  union {
    /*
     * PlainExpectation describes a plain token expectation
     */
    Protos__PlainExpectation *plain_expectation;
  };
};
#define PROTOS__TOKEN_EXPECTATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protos__token_expectation__descriptor) \
    , PROTOS__TOKEN_EXPECTATION__EXPECTATION__NOT_SET, {0} }


typedef enum {
  PROTOS__PLAIN_EXPECTATION__PAYLOAD__NOT_SET = 0,
  PROTOS__PLAIN_EXPECTATION__PAYLOAD_IMPORT_EXPECTATION = 1,
  PROTOS__PLAIN_EXPECTATION__PAYLOAD_TRANSFER_EXPECTATION = 2,
} Protos__PlainExpectation__PayloadCase;

/*
 * PlainExpectation represent the plain expectation where no confidentiality is provided.
 */
struct  _Protos__PlainExpectation
{
  ProtobufCMessage base;
  Protos__PlainExpectation__PayloadCase payload_case;
  union {
    /*
     * ImportExpectation describes an token import expectation
     */
    Protos__PlainTokenExpectation *import_expectation;
    /*
     * TransferExpectation describes a token transfer expectation
     */
    Protos__PlainTokenExpectation *transfer_expectation;
  };
};
#define PROTOS__PLAIN_EXPECTATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protos__plain_expectation__descriptor) \
    , PROTOS__PLAIN_EXPECTATION__PAYLOAD__NOT_SET, {0} }


/*
 * PlainTokenExpectation represents the expecation that
 * certain outputs will be matched
 */
struct  _Protos__PlainTokenExpectation
{
  ProtobufCMessage base;
  /*
   * Outputs contains the expected outputs
   */
  size_t n_outputs;
  PlainOutput **outputs;
};
#define PROTOS__PLAIN_TOKEN_EXPECTATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protos__plain_token_expectation__descriptor) \
    , 0,NULL }


/* Protos__TokenExpectation methods */
void   protos__token_expectation__init
                     (Protos__TokenExpectation         *message);
size_t protos__token_expectation__get_packed_size
                     (const Protos__TokenExpectation   *message);
size_t protos__token_expectation__pack
                     (const Protos__TokenExpectation   *message,
                      uint8_t             *out);
size_t protos__token_expectation__pack_to_buffer
                     (const Protos__TokenExpectation   *message,
                      ProtobufCBuffer     *buffer);
Protos__TokenExpectation *
       protos__token_expectation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protos__token_expectation__free_unpacked
                     (Protos__TokenExpectation *message,
                      ProtobufCAllocator *allocator);
/* Protos__PlainExpectation methods */
void   protos__plain_expectation__init
                     (Protos__PlainExpectation         *message);
size_t protos__plain_expectation__get_packed_size
                     (const Protos__PlainExpectation   *message);
size_t protos__plain_expectation__pack
                     (const Protos__PlainExpectation   *message,
                      uint8_t             *out);
size_t protos__plain_expectation__pack_to_buffer
                     (const Protos__PlainExpectation   *message,
                      ProtobufCBuffer     *buffer);
Protos__PlainExpectation *
       protos__plain_expectation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protos__plain_expectation__free_unpacked
                     (Protos__PlainExpectation *message,
                      ProtobufCAllocator *allocator);
/* Protos__PlainTokenExpectation methods */
void   protos__plain_token_expectation__init
                     (Protos__PlainTokenExpectation         *message);
size_t protos__plain_token_expectation__get_packed_size
                     (const Protos__PlainTokenExpectation   *message);
size_t protos__plain_token_expectation__pack
                     (const Protos__PlainTokenExpectation   *message,
                      uint8_t             *out);
size_t protos__plain_token_expectation__pack_to_buffer
                     (const Protos__PlainTokenExpectation   *message,
                      ProtobufCBuffer     *buffer);
Protos__PlainTokenExpectation *
       protos__plain_token_expectation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protos__plain_token_expectation__free_unpacked
                     (Protos__PlainTokenExpectation *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protos__TokenExpectation_Closure)
                 (const Protos__TokenExpectation *message,
                  void *closure_data);
typedef void (*Protos__PlainExpectation_Closure)
                 (const Protos__PlainExpectation *message,
                  void *closure_data);
typedef void (*Protos__PlainTokenExpectation_Closure)
                 (const Protos__PlainTokenExpectation *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protos__token_expectation__descriptor;
extern const ProtobufCMessageDescriptor protos__plain_expectation__descriptor;
extern const ProtobufCMessageDescriptor protos__plain_token_expectation__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_token_2fexpectations_2eproto__INCLUDED */
