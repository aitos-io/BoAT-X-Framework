/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: accesscontrol/member.proto */

#ifndef PROTOBUF_C_accesscontrol_2fmember_2eproto__INCLUDED
#define PROTOBUF_C_accesscontrol_2fmember_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Accesscontrol__SerializedMember Accesscontrol__SerializedMember;


/* --- enums --- */


/* --- messages --- */

/*
 * Serialized member of blockchain
 */
struct  _Accesscontrol__SerializedMember
{
  ProtobufCMessage base;
  /*
   * organization identifier of the member
   */
  char *org_id;
  /*
   * member identity related info bytes
   */
  ProtobufCBinaryData member_info;
  /*
   * use cert compression
   * todo: is_full_cert -> compressed
   */
  protobuf_c_boolean is_full_cert;
};
#define ACCESSCONTROL__SERIALIZED_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&accesscontrol__serialized_member__descriptor) \
    , (char *)protobuf_c_empty_string, {0,NULL}, 0 }


/* Accesscontrol__SerializedMember methods */
void   accesscontrol__serialized_member__init
                     (Accesscontrol__SerializedMember         *message);
size_t accesscontrol__serialized_member__get_packed_size
                     (const Accesscontrol__SerializedMember   *message);
size_t accesscontrol__serialized_member__pack
                     (const Accesscontrol__SerializedMember   *message,
                      uint8_t             *out);
size_t accesscontrol__serialized_member__pack_to_buffer
                     (const Accesscontrol__SerializedMember   *message,
                      ProtobufCBuffer     *buffer);
Accesscontrol__SerializedMember *
       accesscontrol__serialized_member__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   accesscontrol__serialized_member__free_unpacked
                     (Accesscontrol__SerializedMember *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Accesscontrol__SerializedMember_Closure)
                 (const Accesscontrol__SerializedMember *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor accesscontrol__serialized_member__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_accesscontrol_2fmember_2eproto__INCLUDED */
